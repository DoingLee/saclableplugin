<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.doing</groupId>
    <artifactId>saclable-plugin</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>dynamic_plugins</module>
    </modules>

    <dependencies>
        <!--公共依赖包-->
        <dependency>
            <groupId>com.doing</groupId>
            <artifactId>dynamic_sdk</artifactId>
            <version>1.0-SNAPSHOT</version>
            <!-- maven-assembly-plugin 打包时 不包含-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.doing</groupId>
            <artifactId>dynamic_sdk_2</artifactId>
            <version>1.0-SNAPSHOT</version>
            <!-- maven-assembly-plugin 打包时 不包含-->
            <scope>provided</scope>
        </dependency>

        <!--引入spring boot管理bean-->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>2.1.1.RELEASE</version>
            <!-- maven-assembly-plugin 打包时 不包含-->
            <scope>provided</scope>
        </dependency>

        <!--测试在脚本代码库中引用包-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
    </dependencies>

    <build>
        <!--不配置，就是所有资源都加载-->
        <!--<resources>-->
            <!--<resource>-->
                <!--<directory>src/main/resources</directory>-->
                <!--<filtering>true</filtering>-->
                <!--<includes>-->
                    <!--<include>*.xml</include>-->
                    <!--<include>*.properties</include>-->
                <!--</includes>-->
            <!--</resource>-->
        <!--</resources>-->

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!--解决打包后中文乱码问题-->
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Maven Assembly Plugin 和 Shade Plugin 都可以用来在构建单一 Jar 包时，将所有 Dependency 打入这个最终生成的 Jar 中去。-->
            <!--但是两者在具体的行为上有所不同：-->
            <!-- Assembly 插件不仅会将 Dependency 中的 Class 文件打入最终的 Jar 包，还会将 Dependency 中的资源文件，诸如 properties 文件打入最终的 Jar 包。-->
            <!--当项目和其 Dependency 中有同名的资源文件是，就会发生冲突，项目中的同名文件便不会加入到最终的 Jar 包中。如果这个文件是一个关键的配置文件，便会导致问题。而 Shade Plugin 不存在这样的问题。-->

            <!-- Maven Assembly Plugin -->
            <!--会打出两个包：XXX-jar-with-dependencies.jar（包含第三方的jar）和XXX.jar（不含第三方jar）-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-assembly-plugin</artifactId>-->
                <!--<version>2.4.1</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash; get all project dependencies ：包含所有依赖的第三方jar&ndash;&gt;-->
                    <!--<descriptorRefs>-->
                        <!--<descriptorRef>jar-with-dependencies</descriptorRef>-->
                    <!--</descriptorRefs>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--&lt;!&ndash; 名字任意 &ndash;&gt;-->
                        <!--<id>make-assembly</id>-->
                        <!--&lt;!&ndash; 绑定到package生命周期阶段上 &ndash;&gt;-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--&lt;!&ndash; 只运行一次 &ndash;&gt;-->
                            <!--<goal>single</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!-- Maven Shade Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!--http://maven.apache.org/plugins/maven-shade-plugin/examples/attached-artifact.html-->
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>jar-with-dependencies</shadedClassifierName> <!-- Any name that makes sense -->
                            <artifactSet>
                                <!-- 当引入新的依赖时，请注意排包 -->
                                <!--groupId:artifactId-->
                                <excludes>
                                    <!-- spring jars -->
                                    <exclude>org.springframework:*</exclude>
                                    <!-- test jars -->
                                    <exclude>junit:junit</exclude>
                                </excludes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>xxx-client.xml</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>